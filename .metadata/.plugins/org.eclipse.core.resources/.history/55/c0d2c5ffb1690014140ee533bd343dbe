import java.awt.*;
import java.util.ArrayList;

/**
 * Created by Connor on 2014-11-07.
 */
public class Circle extends Body{

    public Circle(double x,double y,double width,double height){
        super(x,y,width,height);
        max = Vector.subVectors(position,Vector.multVector(size,2));
        min = Vector.addVectors(position,Vector.multVector(size, 2));
        restituion = 0.5;
    }
    public void update(double delta){
        super.update(delta);
        if(VectorGame.game != null){
        	if(position.x + size.x / 2  > VectorGame.game.getWidth()){speed.x *= -Constants.absorbtion;position.x = VectorGame.game.getWidth() - size.x / 2;}
        	if(position.x - size.x / 2 < 0){speed.x *= -Constants.absorbtion;position.x = 0 + size.x / 2;}
        	if(position.y + size.y / 2 > VectorGame.game.getHeight()){speed.y *= -Constants.absorbtion;position.y = VectorGame.game.getHeight() - size.y / 2;}
        	if(position.y - size.y / 2 < 0){speed.y *= -Constants.absorbtion;position.y = 0 + size.y / 2;}
        }
    }
    public void draw(Graphics g){
        g.setColor(Color.BLACK);
        g.fillOval((int)(position.x - size.x / 2), (int)(position.y - size.y / 2), (int) size.x, (int) size.y);
        g.drawRect((int)(position.x),(int)(position.y),20,20);
    }
	@Override
	public boolean collide(Circle c) {
		Circle c1 = this;
		Circle c2 = c;
		Manifold m = new Manifold();
		m.normal = Vector.subVectors(c2.position,c1.position);
		double r = Math.pow((c1.size.y + c2.size.x),2);
		if(m.normal.LengthSquared() > r)
			return false;
		double d = m.normal.Magnitiude();
		if(d != 0){
			m.penetration = r - d;
			
		}
		m.penetration = r - Vector.subVectors(c1.position, c2.position).Magnitiude();
//		if(Vector.subVectors(this.position, c.position).Magnitiude() < Vector.divVector(size, 2).Average() + Vector.divVector(c.size,2).Average()){return true;}
//		return false;
	}
}
